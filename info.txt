Το προγραμμα υλοποιει ολα τα ζητουμενα τις ασκησης

Το model αποτελειται απο 4 classes Course, Trainer, Student, Assignment
Η Course περιεχει 1 λιστα απο Trainer, και 1 λιστα απο Student. Οι εκπαιδευτες και οι μαθητες του καθε course.
H Student περιεχει 1 λιστα απο Assignment, οπου βρισκονται οι εργασιες του καθε μαθητη.
Η Assignment περιεχει 1 λιστα απο Student, οπου βρισκονται ο/οι μαθητης/μαθητες της καθε εργασιας.

Και στις 4 class εχει προστεθει ενα field id, ωστε να ειναι ευκολοτερη η αποθηκευση σε βαση, και να ξεχωριζουν οι οντoτητες μεταξυ τους.

Το προγραμμα ξεκινα απο την κλαση RegistryOffice, η οποια καλει μεθοδους απο την κλαση Bootcamp. 
Στην Bootcamp αποθηκευνται λιστες με τα couses, του trainers, τους students, και τα assignments. 
Τα assignments αποθηκευονται εκει μονο σαν γενικες περιγραφες, δεν περιλαμβανουν τα assignments που εχει καθε μαθητης προσωπικα.
Για να αποκτησουμε προσβαση σε ολα τα assignments, πρεπει να παμε απο την λιστα με ολα τα courses, στους students του καθε course, και απο εκει στα assignment καθε μαθητη.

Η εισαγωγη των δεδομενων γινεται απο τις κλασεις ManualDataEntry και SyntheticDataEntry.

Υπαρχουν επισης διαφορες κλασεις με utilities:
H DataEntryUtilities χρησιμοποιειται απο τις ManualDataEntry και SyntheticDataEntry, και εκτελει επεξεργασιες δεδομενων για τις συσχετισεις μεταξυ των κλασεων του model.
Η ReadFromUserModels χρησιμοποιειται απο την ManualDataEntry, για την εισαγωγη δεδομενων απο τον χρηστη.
Η ReadFromUserUtilities χρησιμοποιειται απο ολο το προγραμμα και εχει γενικες μεθοδους εισαγωγης απο τον χρηστη οπως yes/no, ημερομηνιες, αριθμους, strings.

Η DataCalculation χρησιμοποιει τις λιστες της κλασης Bootcamp, για να εξαγει πληροφοριες και να εμφανισει στον χρηστη τα ζητουμενα της ασκησης.


Σχολια υλοποιησης:
-Κατα την αρχικη εισαγωγη δεδομενων χειροκινητα, μπορει να χρησιμοποποιηθει και ενα αρχειο κειμενου(μπορει να θεωρηθει σαν ενας extra τροπος δημιουργιας συνθετικων δεδομενων).
Ο κωδικας για την συγκεκριμενη λειτουργια εχει αφεθει σαν σχολια. Επισης στον φακελο του προτζεκτ βρισκεται και ενα αρχειο txt με τα δεδομενα αυτα.

-Στο Assignment εχουν προστεθει fields ωστε να περιεχει πληροφοριες που αλλες εχουν σημασια απο την οπτικη του μαθητη, και αλλες απο την οπτικη του course.

-To προγραμμα εχει σχεδιαστει ωστε να μην υπαρχουν duplicate οντοτητες. Πχ αν ενας καθηγητης διδασκει σε 2 μαθηματα, υπαρχει 1 οντοτητα του καθηγητη στα αποθηκευμενα δεδομενα του προγραμματος.
Ομοιως για τους μαθητες που μπορουν να ανηκουν σε πολλα courses, και για τα assignments που αν ειναι ομαδικα μπορουν να τα μοιραζονται πολλοι μαθητες μεταξυ τους.
Γιαυτο και κατα την χειροκινητη εισαγωγη δεδομενων, σε καθε course ο χρηστης ερωταται αν θελει να προσθεσει ηδη υπαρχοντες εκπαιδευτες, μαθητες, ή να ανατεθουν στους μαθητες assignments απο αλλα courses.

-Κατα την χειροκινητη εισαγωγη δεδομενων, τα assignment καθε μαθητη δεν περιεχουν ημερομηνια παραδοσης και βαθμους. Πρεπει να προστεθουν μετεπειτα (απο το μενου assignment per course).

-Οταν ο χρηστης ζηταει την εκτυπωση ολων των assignments, εμφανιζονται τα assignments μονο σαν γενικες περιγραφες(assignments απο την οπτικη του course, π.χ. καταληκτικη ημερομηνια παραδοσης, μεγιστος προφορικος βαθμος, μεγιστος τελικος βαθμος). 

-Οταν ο χρηστης ζηταει την εκτυπωση των assignments με βαση το course ή τον μαθητη, εμφανιζονται τα assignments με τις πληροφοριες που ειναι σχετικες με τους μαθητες(π.χ. αν το assignment εχει παραδωθει απο τον μαθητη, και τους βαθμους που πηρε).

